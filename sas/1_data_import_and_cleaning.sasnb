[{"kind":1,"language":"markdown","value":"## Data Import and Cleaning\nThe following notebook takes in input raw data from the 3 available data tables, combines it, cleans it and creates new features.\n\nThe data comes in the following form:\n\n![Data Overview](../img/workbench_workshop_relationships.png)\n","outputs":[]},{"kind":1,"language":"markdown","value":"### LOAD THE INPUT DATA\nIn this code section we load all the original data and print the first rows to get an idea of the data formats.","outputs":[]},{"kind":2,"language":"sas","value":"* Import the csv files and store them in WBTempLib (i.e., work);\nproc import datafile=\"&original/credit_score_info.csv\" dbms=csv out=WBTempLib.credit_score_info;\nrun;\n\n* Print the first rows of each table;\ntitle1 \"Credit Score Information\";\nproc print data=WBTempLib.credit_score_info (obs=2);\nrun;\ntitle1;\n\nproc import datafile=\"&original/customer_info.csv\" dbms=csv out=WBTempLib.customer_info;\nrun;\n\ntitle1 \"Customer Information\";\nproc print data=WBTempLib.customer_info (obs=2);\nrun;\ntitle1;\n\nproc import datafile=\"&original/loan_details.csv\" dbms=csv out=WBTempLib.loan_details;\nrun;\n\ntitle1 \"Loan Details\";\nproc print data=WBTempLib.loan_details (obs=2);\nrun;\ntitle1;","outputs":[]},{"kind":1,"language":"markdown","value":"### Merge the data\nGiven that CustomerID is a key for all 3 datasets, we can exploit to merge our data sources into 1 table.","outputs":[]},{"kind":2,"language":"sas","value":"* Sort the DFs by the common key and perform a merge;\nproc sort data=WBTempLib.credit_score_info;\n    by CustomerID;\nrun;\n\nproc sort data=WBTempLib.customer_info;\n    by CustomerID;\nrun;\n\nproc sort data=WBTempLib.loan_details;\n    by CustomerID;\nrun;\n\ndata &WBDataLib..&inputData.;\n    merge WBTempLib.credit_score_info(in=credit) WBTempLib.customer_info(in=customer) WBTempLib.loan_details(in=loan);\n        by CustomerID;\n    Label\n            Age               = \"Age\"\n            CreditPolicy      = \"Meets Lending Club Credit Underwriting Policy (0/1)\"\n            CreditLineAge     = \"Length of Credit Line in Age\"\n            Debt              = \"Self Reported Debt\"\n            Default           = \"Individual has defaulted on loan\"\n            Delinquencies2Yrs = \"Credit Delinquenices in the last 2 Years\"\n            FICOScore         = \"FICO Credit Score\"\n            Gender            = \"Gender\"\n            Inquiries6Mnths   = \"Credit Inquiries in the last 6 Months\"\n            InterestRate      = \"Interest Rate\"\n            Installment       = \"Monthly Installment\"\n            AnnualInc         = \"Self Reported Annual Income\"\n            PublicRecord      = \"Public Record\"\n            Purpose           = \"Purpose of the Loan\"\n            Race              = \"Race\"\n            RevBalance        = \"Revolving Balance\"\n            RevUtilization    = \"Revolving Utilitization\"           \n      ;\n    id=_N_;  \n    if credit=1 and customer=1 and loan=1 then output;\nrun;\n\nproc print data=&WBDataLib..&inputData. (obs=10);\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### EXPLORE THE INPUT DATA\nLet's investigate the data distributions and evaluate if new features need to be added.","outputs":[]},{"kind":2,"language":"sas","value":"* Let's verify Variable Info with Proc Contents;\nproc contents data = &WBDataLib..&inputData.;\nods exclude enginehost;\nrun;\n\n* Let's have a look at the variable distributions via Proc Means;\n%let inputStats = n nmiss mean min max std;\nproc means data = &WBDataLib..&inputData. &inputStats.;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Let's look at the distributions","outputs":[]},{"kind":2,"language":"sas","value":"** SORT the data using the class var                    **;\nproc sort data=&WBDataLib..&inputData.;\nby Default;\nrun;\n\n**********************************************************;\n**     endpoints assigned based on mix/max values       **;\n**********************************************************;\nproc univariate data=&WBDataLib..&inputData.;\nclass Default;\nvar CreditLineAge Delinquencies2Yrs FICOscore  Inquiries6Mnths  \n    Installment   InterestRate AnnualInc RevBalance RevUtilization Debt\n    ;\nhistogram CreditLineAge     / overlay endpoints= 0   to 18000   by 300;\nhistogram Delinquencies2Yrs / overlay endpoints= 0   to 14      by 1;      \nhistogram FICOscore         / overlay endpoints= 600 to 850     by 25;     \nhistogram Inquiries6Mnths   / overlay endpoints= 0   to 34      by 1;;       \nhistogram Installment       / overlay endpoints= 0   to 1000    by 50;   \nhistogram InterestRate      / overlay endpoints= 0   to .25     by .01;      \nhistogram AnnualInc      / overlay endpoints= 2300   to 1370000     by 50000;     \nhistogram RevBalance        / overlay endpoints= 0   to 1300000 by 1500;\nhistogram RevUtilization    / overlay endpoints= 0   to 120     by 5; \nhistogram Debt    / overlay endpoints= 0   to 7700000     by 100000; \nods exclude Moments BasicMeasures ExtremeObs Quantiles TestsForLocation; \nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### Feature Engineering\n\n- The Income variable appears to be skewed. We will apply a logarithmic transformation\n- Let's aggregate information coming from income and debt by creating a debt/income ratio","outputs":[]},{"kind":2,"language":"sas","value":"* Create the new DebtIncRatio and the LogAnnualInc;\ndata &WBDataLib..&inputData.;\n    set &WBDataLib..&inputData.;\n    DebtIncRatio = Debt/AnnualInc;\n    LogAnnualInc = Log(AnnualInc);\n    drop Debt AnnualInc;\nrun; ","outputs":[]},{"kind":2,"language":"sas","value":"** SORT the data using the class var                    **;\nproc sort data=&WBDataLib..&inputData.;\nby Default;\nrun;\n\n* Let's Plot the distributions of the new variables;\nproc univariate data=&WBDataLib..&inputData.;\nclass Default;\nvar LogAnnualInc  DebtIncRatio\n    ; \nhistogram LogAnnualInc      / overlay endpoints= 7   to 15      by .5;     \nhistogram DebtIncRatio    / overlay endpoints= 0   to 30      by 2.5; \nods exclude Moments BasicMeasures ExtremeObs Quantiles TestsForLocation; \nrun;","outputs":[]},{"kind":2,"language":"sas","value":"* Let's summarize the variables with the custom formats we defined in notebook 0;\nOPTIONS FMTSEARCH=(format);\n\nproc freq data = &WBDataLib..&inputData.;\n  tables CreditLineAge CreditPolicy DebtIncRatio Default Delinquencies2Yrs FICOscore \n         Inquiries6Mnths Installment InterestRate LogAnnualInc PublicRecord Purpose\n         RevBalance RevUtilization Age Race Gender\n         / nocum\n          ;\n  format Age agegroup.\n         CreditLineAge clage.\n         DebtincRatio debtinc.\n         Delinquencies2Yrs delinq.\n         FICOscore fico.\n         Inquiries6Mnths inquiries.\n         Installment install.\n         InterestRate interest.\n         LogAnnualInc nloginc.         \n         RevBalance revbal.\n         RevUtilization revutil.\n        ;\n  run;","outputs":[]},{"kind":2,"language":"sas","value":"","outputs":[]}]