[{"kind":1,"language":"markdown","value":"### Generate New Positive Cases","outputs":[]},{"kind":2,"language":"sas","value":"data work.synthetic1;\n    do i = 1 to 10000; /* number of observations you want to generate */\n        id = i;\n        output;\n    end;\nrun;\n","outputs":[]},{"kind":2,"language":"sas","value":"*Let's load the GANs astore model;\nproc astore;\n    upload rstore=_SASUSR_.LCLoanSynthetic_1_astore\n    store=\"&project_folder/Workbench-Workshop-Handout/sas/astore/LCLoanSynthetic_1.astore\";\nquit;","outputs":[]},{"kind":2,"language":"sas","value":"* Let's generate new observations;\n/* Change the seed to generate different data */\n\n%let astname = _SASUSR_.LCLoanSynthetic_1_astore;\n%let datain = work.synthetic1;\n%let dataout = work.astoreout1;\n%let seed = 1234;\n\nproc astore;\nsetoption seed &seed.;\nscore rstore=&astname.\n    data=&datain.\n    out=&dataout.;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"* Make sure that all formats are correct;\ndata &dataout.(rename=(CreditPolicy_int=CreditPolicy PublicRecord_int=PublicRecord Default_int=Default));\n    set &dataout.;\n    CreditPolicy_int = input(CreditPolicy, 8.);\n    PublicRecord_int = input(PublicRecord, 8.);\n    Default_int = input(Default, 8.);\n    drop CreditPolicy PublicRecord Default;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"*Create a comparison df: this will be used to compare train and synthetic observations;\ndata &WBTempLib..compare;\n  set &WBDataLib..LCLoanTrain (in=Training) &dataout. (in=Synthetic);\n  if synthetic then source = 'Synthetic';\n  if training then source= 'Training';\n  label CreditLineAge =' '\n        CreditPolicy = ' '\n        DebtIncRatio =' '\n        Delinquencies2Yrs =' '\n        Default = ' '\n        FICOScore = ' '\n        Inquiries6Mnths =' '\n        InterestRate =' '\n        Installment =' '\n        LogAnnualInc =' ' \n        PublicRecord =' '\n        Purpose =' '        \n        RevBalance =' '\n        RevUtilization =' '        \n      ;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"** SORT the data using the class var                    **;\nproc sort data=&WBTempLib..compare;\nby source;\nrun;\n\n* Let's plot the distributions of the two groups;\nclass source;\nvar CreditLineAge Delinquencies2Yrs FICOscore  Inquiries6Mnths  \n    Installment   InterestRate LogAnnualInc RevBalance RevUtilization DebtIncRatio\n    ;\nhistogram CreditLineAge     / overlay endpoints= 0   to 18000   by 300;\nhistogram Delinquencies2Yrs / overlay endpoints= 0   to 14      by 1;      \nhistogram FICOscore         / overlay endpoints= 600 to 850     by 25;     \nhistogram Inquiries6Mnths   / overlay endpoints= 0   to 34      by 1;;       \nhistogram Installment       / overlay endpoints= 0   to 1000    by 50;   \nhistogram InterestRate      / overlay endpoints= 0   to .25     by .01;      \nhistogram LogAnnualInc      / overlay endpoints= 7   to 15      by .5;     \nhistogram RevBalance        / overlay endpoints= 0   to 1300000 by 1500;\nhistogram RevUtilization    / overlay endpoints= 0   to 120     by 5; \nhistogram DebtIncRatio    / overlay endpoints= 0   to 30      by 2.5; \nods exclude Moments BasicMeasures ExtremeObs Quantiles TestsForLocation; \nrun;","outputs":[]},{"kind":2,"language":"sas","value":"* Fix unreasonable values for different variables;\ndata &dataout.;\n  set &dataout.;\n  if CreditLineAge < 0 then CreditLineAge=0;\n  if Installment < 0 then Installment=50;\n  if RevBalance < 0 then RevBalance=0;\n  if RevUtilization <0 then RevUtilization=0;\n  if RevUtilization >100 then RevUtilization=100;\n  if DebtIncRatio <0 then DebtIncRatio=0;\n  if InterestRate <0 then InterestRate=0.02;\n  if LogAnnualInc <=8.5 then LogAnnualInc=8.5;\nrun; \n\n* Apply WOE Binning to Synthetic Data;\ndata &WBDataLib..Synthetic_data;\n    set &dataout.;\n    %include &codefile.;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"*Export it for later use in Python;\nproc export data=&WBDataLib..Synthetic_data\n    outfile=\"&project_folder./Workbench-Workshop-Handout/data/cleaned_data/synthetic_data.csv\"\n    dbms=csv\n    replace;\nrun;","outputs":[]}]