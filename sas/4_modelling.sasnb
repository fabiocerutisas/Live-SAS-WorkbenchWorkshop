[{"kind":1,"language":"markdown","value":"## Modelling","outputs":[]},{"kind":1,"language":"markdown","value":"### TRAIN MODEL","outputs":[]},{"kind":1,"language":"markdown","value":"Assign Macro Variables for libname, input data, output data, and code file(s)","outputs":[]},{"kind":1,"language":"markdown","value":"* Prepare the training data for modeling\n* Assign the groups and WOE based on the binning results","outputs":[]},{"kind":2,"language":"sas","value":"*Let's apply the WOE Transformation to the Train and Validate dataset;\ndata &WBDataLib..&SCTraining.;\n    set &WBDataLib..&trainValidate.;\n    %include &codefile.;\nrun;\n\nproc contents data=&WBDataLib..&SCTraining.;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Initialize Additional Variable Macros","outputs":[]},{"kind":2,"language":"sas","value":"*Let's define interval variables, nominal, class and binary ones;\n%macro AssessForBiasVars;\n  'Gender'n 'Race'n\n%mend AssessForBiasVars;\n%global AssessForBiasVarCount;\n%let AssessForBiasVarCount = 2 ;\n\n%macro intervalInputVars;\n  'CreditLineAge'n  'DebtIncRatio'n        'FICOScore'n         'Inquiries6Mnths'n\n  'LogAnnualInc'n   'RevBalance'n          'RevUtilization'n    'Installment'n\n  'InterestRate'n\n%mend intervalInputVars;\n%global intervalInputVarCount;\n%let intervalInputVarCount = 7 ;\n\n%macro binaryInputVars;\n  'CreditPolicy'n\n%mend binaryInputVars;\n%global binaryInputVarCount;\n%let binaryInputVarCount = 1 ;\n\n%macro nominalInputVars;\n  'Delinquencies2Yrs'n 'PublicRecord'n 'Purpose'n 'Race'n\n%mend nominalInputVars;\n%global nominalInputVarCount;\n%let nominalInputVarCount = 4 ;\n\n%macro classInputVars;\n  'CreditPolicy'n     'Delinquencies2Yrs'n    'PublicRecord'n       'Purpose'n\n  'BIN_FICOScore'n    'BIN_Inquiries6Mnths'n  'BIN_LogAnnualInc'n  'BIN_DebtIncRatio'n  \n  'BIN_RevBalance'n   'BIN_RevUtilization'n   'BIN_CreditLineAge'n\n%mend classInputVars;\n%global classInputVarCount;\n%let classInputVarCount = 11 ;\n\n%macro stratInputVars;\n  'Default'n \n%mend stratInputVars;\n%global stratInputVarCount;\n%let stratInputVarCount = 1 ;\n","outputs":[]},{"kind":1,"language":"markdown","value":"#### Logistic Regression - proc GENSELECT","outputs":[]},{"kind":2,"language":"sas","value":"*Let's fit a Logistic Regression performing variable selection;\nproc genselect data=&WBDataLib..&SCTraining.\n               tech=NRRIDG maxiter=300 normalize=YES\n                ;\n  partition rolevar='_PartInd_'n (TRAIN='1' VALIDATE='2');\n  class %classInputVars / param=GLM order=formatted;\n  model 'Default'n \n        (event='1')=  %intervalInputVars %classInputVars\n        / link=LOGIT dist=BINARY\n        ;\n  selection method=BACKWARD(choose=SBC stop=SBC slStay=0.05 Hierarchy=NONE select=SBC) plots=all;\n  savestate rstore=astlib.&WBAStore.; \n\n  ods output \n     PredProbName       = &WBTempLib..PredProbName \n     ModelInfo          = &WBTempLib..PredIntoName\n     SelectionSummary   = &WBTempLib..Selection(drop=Control)\n     ParameterEstimates = &WBTempLib..ParamEstsA\n     FitStatistics      = &WBTempLib..OutFit \n\n  ;\n  code file=&scorecodeFile. pcatall iprob labelid=13582328; \nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"#### Review the model fit statistics","outputs":[]},{"kind":2,"language":"sas","value":"* Produce Predictions with the above-create astore and create a scored dataset;\nproc astore;\n   score data=&WBDataLib..&SCTraining.\n         rstore=astlib.&WBAStore.\n         out=&SCTraining._scored\n         COPYVAR=id\n         ;\nquit;\n\nproc sql;\n      create table &WBDataLib..&SCTraining._scored as\n      select t1.*, t2.p_default0, t2.p_default1, t2.i_default \n      from &WBDataLib..&SCTraining. as t1 left join &SCTraining._scored as t2 on\n            t1.id=t2.id\n;\nquit;\n","outputs":[]},{"kind":2,"language":"sas","value":"*Let' analyze train and validation fit metrics;\nproc format;\n\tvalue partindlbl 1 = 'Training' 2 = 'Validation';\nrun;\n\nproc assess data=&WBDataLib..&SCTraining._scored ncuts=10 nbins=5;\n   var p_default1;\n   target default / event=\"1\" level=nominal;\n   fitstat pvar=p_default0 / pevent=\"0\" ;\n   by _PartInd_;\n   format _partind_ partindlbl.; \n   ods output rocinfo=logistic_roc;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"*Plot ROC Curve;\nproc sgplot data=logistic_roc aspect=1;\n\ttitle \"ROC Curve\";\n\txaxis label=\"False positive rate\" values=(0 to 1 by 0.1);\n\tyaxis label=\"True positive rate\"  values=(0 to 1 by 0.1);\n\tlineparm x=0 y=0 slope=1 / transparency=.7 LINEATTRS=(Pattern=34);\n\tseries x=fpr y=sensitivity /group=_partind_;\n\tformat _partind_ partindlbl.;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"/* Define what subset of the data to use: 1=train, 2=validation and assess bias on Race */\n%let datasubset=1;\n\n%let varaible_to_assess = race;\ntitle \"Bias Metrics: Training\";\nproc assessbias data=&WBDataLib..&SCTraining._scored(where=(_PartInd_=&datasubset.)) ncuts=10 nbins=5;\n   var p_default1;\n   target default / event=\"1\" level=nominal;\n   fitstat pvar=p_default0 / pevent=\"0\" ;\n   sensitiveVar &varaible_to_assess.;\nrun;\n\n/* Define what subset of the data to use: 1=train, 2=validation */\n%let datasubset=2;\n\ntitle \"Bias Metrics: Validation\";\nproc assessbias data=&WBDataLib..&SCTraining._scored(where=(_PartInd_=&datasubset.)) ncuts=10 nbins=5;\n   var p_default1;\n   target default / event=\"1\" level=nominal;\n   fitstat pvar=p_default0 / pevent=\"0\" ;\n   sensitiveVar &varaible_to_assess.;\nrun;\ntitle ;","outputs":[]},{"kind":1,"language":"markdown","value":"#### Output Dictionary:\n![Bias Metrics](../img/bias_metrics.png)","outputs":[]},{"kind":1,"language":"markdown","value":"### Your Task\n\nDevelop a Gradient Boosting Model, test different hyperparameters and compare its performance against the above trained Logistic Model.\n\n![GradBoost Overview](../img/GradBoost_Overview.png)\n![GradBoost Hyperparams](../img/GradBoost_Hyperparams.png)\n\nFor further guidance: https://go.documentation.sas.com/doc/en/workbenchcdc/v_001/vwbcasml/vwbcasml_gradboost_overview.htm","outputs":[]},{"kind":2,"language":"sas","value":"proc gradboost data = &WBDataLib..&SCTraining.\n    ___YOUR HYPERPARAMETER___\n    seed = 42;\n    partition rolevar='_PartInd_'n (TRAIN='1' VALIDATE='2');\n    input __/ level=interval;\n    input __/ level = nominal; \n    target __ / level = nominal;\n    savestate rstore=astlib.Gradboost_model;\nrun; ","outputs":[]},{"kind":2,"language":"sas","value":"/* Saving the ASTORE file to disk so it can be used offline later */\nproc astore;\n    download rstore=_SASUSR_.Gradboost_model\n    store=\"&project_folder./Workbench-Workshop-Handout/sas/astore/Gradboost_model.astore\";\nquit;","outputs":[]},{"kind":2,"language":"sas","value":"* Load the newly created astore and score data;\nproc astore;\n   score data=&WBDataLib..&SCTraining.\n         rstore=astlib.Gradboost_model\n         out=&SCTraining.gb_scored\n         COPYVAR=id\n         ;\nquit;\n\nproc sql;\n      create table &WBDataLib..&SCTraining.gb_scored as\n      select t1.*, t2.p_default0, t2.p_default1, t2.i_default \n      from &WBDataLib..&SCTraining. as t1 left join &SCTraining.gb_scored as t2 on\n            t1.id=t2.id\n;\nquit;\n","outputs":[]},{"kind":2,"language":"sas","value":"* Assess the model performance;\nproc assess data=&WBDataLib..&SCTraining.gb_scored ncuts=10 nbins=5;\n   var p_default1;\n   target default / event=\"1\" level=nominal;\n   fitstat pvar=p_default0 / pevent=\"0\" ;\n   by _PartInd_;\n   format _partind_ partindlbl.; \n   ods output rocinfo=gb_roc;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"*Compare ROC Curve between the Logistic and the Gradient Boosting Model;\ndata all_rocinfo;\n  set logistic_roc(in=l)\n      gb_roc(in=gb);\n\n  length model $ 16;\n  select;\n      when (l) model='Logistic';\n      when (gb) model='GB';\n     end;\n  length model_data $ 30;\n  if _PartInd_ = 1 then model_data = catx('-', model, 'Train');\n  if _PartInd_ = 2 then model_data = catx('-', model, 'Valid');\nrun;\n\ntitle \"AUC\";\nproc sql;\n  select distinct model_data, c from all_rocinfo order by c desc;\nquit;\n\nproc sgplot data=all_rocinfo aspect=1;\n  title \"ROC Curve\";\n  xaxis values=(0 to 1 by 0.25) grid offsetmin=.05 offsetmax=.05;\n  yaxis values=(0 to 1 by 0.25) grid offsetmin=.05 offsetmax=.05;\n  lineparm x=0 y=0 slope=1 / transparency=.7;\n  series x=fpr y=sensitivity / group=model_data;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### Your Task\nPerform a Bias assessment for the newly developed model. Is there any Gender/Race bias? ","outputs":[]},{"kind":2,"language":"sas","value":"","outputs":[]},{"kind":1,"language":"markdown","value":"### Export the data\nWe export the data after applying the WOE Transformation to later use it in Python Modelling","outputs":[]},{"kind":2,"language":"sas","value":"*Apply WOE to train, validation and test data;\ndata work.train_valid_test;\n    set &WBDataLib..&partData.;\n    %include &codefile.;\nrun;","outputs":[]},{"kind":2,"language":"sas","value":"*Export it for later use in Python;\nproc export data=work.train_valid_test\n    outfile=\"&project_folder./Workbench-Workshop-Handout/data/cleaned_data/train_valid_test.csv\"\n    dbms=csv\n    replace;\nrun;","outputs":[]}]